@model google_reviews.Models.ReviewMonitorReport
@{
    ViewData["Title"] = "Review Report";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1>@ViewData["Title"]</h1>
                <div>
                    <a asp-action="ReviewMonitor" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left"></i> Back to Monitor
                    </a>
                    <button onclick="window.print()" class="btn btn-outline-primary">
                        <i class="fas fa-print"></i> Print Report
                    </button>
                </div>
            </div>
            
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-action="Index">Reviews</a></li>
                    <li class="breadcrumb-item"><a asp-action="ReviewMonitor">Review Monitor</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Report</li>
                </ol>
            </nav>

            <!-- Report Summary -->
            <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                    <h5><i class="fas fa-chart-bar"></i> Report Summary</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3">
                            <div class="text-center">
                                <h3 class="text-primary">@Model.TotalCompaniesChecked</h3>
                                <small class="text-muted">Companies Checked</small>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="text-center">
                                <h3 class="text-danger">@Model.CompaniesWithIssues</h3>
                                <small class="text-muted">Companies with Issues</small>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="text-center">
                                <h3 class="text-warning">@Model.TotalBadReviews</h3>
                                <small class="text-muted">Total Bad Reviews</small>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="text-center">
                                <h3 class="text-success">@(Model.TotalCompaniesChecked - Model.CompaniesWithIssues)</h3>
                                <small class="text-muted">Companies OK</small>
                            </div>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-md-6">
                            <p><strong>Date Range:</strong> @Model.FromDate.ToString("MMM dd, yyyy") - @Model.ToDate.ToString("MMM dd, yyyy")</p>
                            <p><strong>Rating Filter:</strong> @Model.MaxRating stars and below</p>
                        </div>
                        <div class="col-md-6">
                            <p><strong>Generated:</strong> @Model.GeneratedAt.ToString("MMM dd, yyyy HH:mm:ss")</p>
                            <p><strong>Period:</strong> @((Model.ToDate - Model.FromDate).Days) days</p>
                        </div>
                    </div>
                </div>
            </div>

            @if (Model.CompaniesWithIssues == 0)
            {
                <div class="alert alert-success">
                    <h4><i class="fas fa-check-circle"></i> Great News!</h4>
                    <p>No companies have bad reviews (@Model.MaxRating stars or below) in the specified time period.</p>
                    <p>All @Model.TotalCompaniesChecked companies are performing well with their customer reviews.</p>
                </div>
            }
            else
            {
                <!-- Issues Found -->
                <div class="alert alert-warning">
                    <h4><i class="fas fa-exclamation-triangle"></i> Issues Found</h4>
                    <p>@Model.CompaniesWithIssues out of @Model.TotalCompaniesChecked companies have received bad reviews (@Model.MaxRating stars or below) that require attention.</p>
                </div>

                <!-- Company Reports -->
                @foreach (var companyReport in Model.CompanyReports)
                {
                    <div class="card mb-4">
                        <div class="card-header bg-light">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h5 class="mb-1">
                                        <i class="fas fa-building text-danger"></i>
                                        @companyReport.Company.Name
                                    </h5>
                                    <small class="text-muted">
                                        Place ID: @companyReport.Company.PlaceId
                                        @if (!string.IsNullOrEmpty(companyReport.Company.GoogleMapsUrl))
                                        {
                                            <a href="@companyReport.Company.GoogleMapsUrl" target="_blank" class="ms-2">
                                                <i class="fas fa-external-link-alt"></i> View on Google Maps
                                            </a>
                                        }
                                    </small>
                                </div>
                                <div class="text-end">
                                    <span class="badge bg-danger fs-6">
                                        @companyReport.TotalBadReviews bad review@(companyReport.TotalBadReviews != 1 ? "s" : "")
                                    </span>
                                    <div class="text-warning">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            if (i <= Math.Round(companyReport.AverageRating))
                                            {
                                                <i class="fas fa-star"></i>
                                            }
                                            else
                                            {
                                                <i class="far fa-star"></i>
                                            }
                                        }
                                        <small>(@companyReport.AverageRating.ToString("F1"))</small>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            @foreach (var review in companyReport.BadReviews)
                            {
                                <div class="border-start border-3 border-danger ps-3 mb-3">
                                    <div class="d-flex justify-content-between align-items-start mb-2">
                                        <div>
                                            <strong>@review.AuthorName</strong>
                                            <div class="text-warning">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    if (i <= review.Rating)
                                                    {
                                                        <i class="fas fa-star"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="far fa-star"></i>
                                                    }
                                                }
                                                <span class="badge bg-danger ms-2">@review.Rating star@(review.Rating != 1 ? "s" : "")</span>
                                            </div>
                                        </div>
                                        <small class="text-muted">@review.Time.ToString("MMM dd, yyyy")</small>
                                    </div>
                                    @if (!string.IsNullOrEmpty(review.Text))
                                    {
                                        <p class="mb-2">@review.Text</p>
                                    }
                                    else
                                    {
                                        <p class="text-muted mb-2"><em>No review text provided</em></p>
                                    }
                                    <div class="d-flex justify-content-between align-items-center">
                                        <small class="text-muted">
                                            @{
                                                var timeAgo = DateTime.UtcNow - review.Time;
                                                string timeAgoText = timeAgo.Days > 0 ? $"{timeAgo.Days} days ago" : 
                                                                    timeAgo.Hours > 0 ? $"{timeAgo.Hours} hours ago" : 
                                                                    $"{timeAgo.Minutes} minutes ago";
                                            }
                                            @timeAgoText
                                        </small>
                                        @if (!string.IsNullOrEmpty(review.AuthorUrl))
                                        {
                                            <a href="@review.AuthorUrl" target="_blank" class="btn btn-sm btn-outline-primary">
                                                <i class="fas fa-user"></i> View Profile
                                            </a>
                                        }
                                    </div>
                                </div>
                            }
                            <div class="mt-3 pt-3 border-top">
                                <div class="row">
                                    <div class="col-md-6">
                                        <a asp-action="Company" asp-route-id="@companyReport.Company.Id" class="btn btn-outline-primary">
                                            <i class="fas fa-eye"></i> View All Reviews
                                        </a>
                                    </div>
                                    <div class="col-md-6 text-end">
                                        <small class="text-muted">
                                            Last updated: @companyReport.Company.LastUpdated.ToString("MMM dd, yyyy HH:mm")
                                        </small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }

            <!-- Action Items -->
            @if (Model.CompaniesWithIssues > 0)
            {
                <div class="card">
                    <div class="card-header bg-info text-white">
                        <h5><i class="fas fa-tasks"></i> Recommended Actions</h5>
                    </div>
                    <div class="card-body">
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item">
                                <i class="fas fa-reply text-primary"></i>
                                <strong>Respond to Reviews:</strong> Address negative reviews professionally and promptly
                            </li>
                            <li class="list-group-item">
                                <i class="fas fa-phone text-success"></i>
                                <strong>Contact Customers:</strong> Reach out to dissatisfied customers to resolve issues
                            </li>
                            <li class="list-group-item">
                                <i class="fas fa-chart-line text-warning"></i>
                                <strong>Monitor Trends:</strong> Look for patterns in complaints to identify systemic issues
                            </li>
                            <li class="list-group-item">
                                <i class="fas fa-star text-info"></i>
                                <strong>Encourage Reviews:</strong> Ask satisfied customers to leave positive reviews
                            </li>
                            <li class="list-group-item">
                                <i class="fas fa-sync-alt text-secondary"></i>
                                <strong>Regular Monitoring:</strong> Run this report regularly to stay on top of review issues
                            </li>
                        </ul>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    @@media print {
        .btn, .breadcrumb, nav {
            display: none !important;
        }
        .card {
            border: 1px solid #dee2e6 !important;
            box-shadow: none !important;
        }
    }
</style>