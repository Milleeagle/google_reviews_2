@model google_reviews.Models.ScheduledReviewMonitor
@{
    ViewData["Title"] = "Create Scheduled Monitor";
    var companies = ViewBag.Companies as List<google_reviews.Models.Company> ?? new();
    var emailConfigured = ViewBag.EmailConfigured as bool? ?? false;
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>@ViewData["Title"]</h2>
    <a asp-action="Index" class="btn btn-outline-secondary">
        <i class="fas fa-arrow-left"></i> Back to Monitors
    </a>
</div>

@if (!emailConfigured)
{
    <div class="alert alert-danger">
        <h5><i class="fas fa-exclamation-triangle"></i> Email Configuration Required</h5>
        <p>Please configure email settings before creating scheduled monitors.</p>
        <a asp-action="Index" class="btn btn-outline-primary">Configure Email First</a>
    </div>
    return;
}

<form asp-action="Create" method="post" id="monitorForm">
    <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
    
    <div class="row">
        <div class="col-md-8">
            <!-- Basic Information -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5><i class="fas fa-info-circle"></i> Basic Information</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Name" class="form-label"></label>
                                <input asp-for="Name" class="form-control" placeholder="e.g., Weekly Review Alert" required />
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="EmailAddress" class="form-label"></label>
                                <div class="input-group">
                                    <input asp-for="EmailAddress" class="form-control" type="email" placeholder="notifications@company.com" required />
                                    <button type="button" class="btn btn-outline-secondary" onclick="testEmail()">
                                        <i class="fas fa-envelope"></i> Test
                                    </button>
                                </div>
                                <span asp-validation-for="EmailAddress" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label asp-for="Description" class="form-label"></label>
                        <textarea asp-for="Description" class="form-control" rows="2" placeholder="Optional description of what this monitor tracks"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <!-- Review Criteria -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5><i class="fas fa-filter"></i> Review Criteria</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="MaxRating" class="form-label"></label>
                                <select asp-for="MaxRating" class="form-select" required>
                                    <option value="1">1 Star and below</option>
                                    <option value="2">2 Stars and below</option>
                                    <option value="3" selected>3 Stars and below</option>
                                    <option value="4">4 Stars and below</option>
                                    <option value="5">5 Stars and below (All reviews)</option>
                                </select>
                                <div class="form-text">Reviews with this rating or lower will be flagged as issues</div>
                                <span asp-validation-for="MaxRating" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="ReviewPeriodDays" class="form-label"></label>
                                <select asp-for="ReviewPeriodDays" class="form-select" required>
                                    <option value="1">Last 1 day</option>
                                    <option value="3">Last 3 days</option>
                                    <option value="7" selected>Last 7 days</option>
                                    <option value="14">Last 14 days</option>
                                    <option value="30">Last 30 days</option>
                                    <option value="90">Last 90 days</option>
                                </select>
                                <div class="form-text">How far back to look for reviews</div>
                                <span asp-validation-for="ReviewPeriodDays" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Schedule Configuration -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5><i class="fas fa-calendar-alt"></i> Schedule Configuration</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label asp-for="ScheduleType" class="form-label"></label>
                                <select asp-for="ScheduleType" class="form-select" onchange="updateScheduleOptions()" required>
                                    <option value="0">Daily</option>
                                    <option value="1">Weekly</option>
                                    <option value="2">Monthly</option>
                                </select>
                                <span asp-validation-for="ScheduleType" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label asp-for="ScheduleTime" class="form-label"></label>
                                <input asp-for="ScheduleTime" type="time" class="form-control" value="09:00" required />
                                <div class="form-text">Time to run the monitor (24-hour format)</div>
                                <span asp-validation-for="ScheduleTime" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="mb-3" id="dayOfWeekGroup" style="display: none;">
                                <label asp-for="DayOfWeek" class="form-label"></label>
                                <select asp-for="DayOfWeek" class="form-select">
                                    <option value="">Select day...</option>
                                    <option value="0">Sunday</option>
                                    <option value="1">Monday</option>
                                    <option value="2">Tuesday</option>
                                    <option value="3">Wednesday</option>
                                    <option value="4">Thursday</option>
                                    <option value="5">Friday</option>
                                    <option value="6">Saturday</option>
                                </select>
                                <span asp-validation-for="DayOfWeek" class="text-danger"></span>
                            </div>
                            <div class="mb-3" id="dayOfMonthGroup" style="display: none;">
                                <label asp-for="DayOfMonth" class="form-label"></label>
                                <select asp-for="DayOfMonth" class="form-select">
                                    <option value="">Select day...</option>
                                    @for (int i = 1; i <= 31; i++)
                                    {
                                        <option value="@i">@i</option>
                                    }
                                </select>
                                <div class="form-text">Day of month (will use last day if month doesn't have this day)</div>
                                <span asp-validation-for="DayOfMonth" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="alert alert-info">
                        <div id="schedulePreview">
                            <strong>Schedule Preview:</strong> <span id="scheduleText">Daily at 09:00</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Company Selection -->
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h5><i class="fas fa-building"></i> Company Selection</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <div class="form-check">
                            <input asp-for="IncludeAllCompanies" class="form-check-input" type="checkbox" onchange="toggleCompanySelection()" checked />
                            <label asp-for="IncludeAllCompanies" class="form-check-label">
                                Include All Companies
                            </label>
                            <div class="form-text">Automatically monitor all active companies with Place IDs</div>
                        </div>
                    </div>

                    <div id="companySelectionGroup" style="display: none;">
                        <div class="mb-3">
                            <div class="d-flex gap-2 mb-2">
                                <button type="button" class="btn btn-outline-primary btn-sm flex-fill" onclick="selectAllCompanies()">
                                    <i class="fas fa-check-square"></i> Select All
                                </button>
                                <button type="button" class="btn btn-outline-secondary btn-sm flex-fill" onclick="clearAllCompanies()">
                                    <i class="fas fa-square"></i> Clear All
                                </button>
                            </div>
                        </div>
                        
                        <div class="company-list" style="max-height: 300px; overflow-y: auto; border: 1px solid #dee2e6; border-radius: 0.375rem; padding: 10px;">
                            @if (companies.Any())
                            {
                                @foreach (var company in companies.Where(c => !string.IsNullOrEmpty(c.PlaceId)))
                                {
                                    <div class="form-check mb-2">
                                        <input type="checkbox" name="selectedCompanies" value="@company.Id" class="form-check-input company-checkbox" id="company_@company.Id" />
                                        <label for="company_@company.Id" class="form-check-label">
                                            <strong>@company.Name</strong>
                                            <br><small class="text-muted">@company.PlaceId</small>
                                        </label>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="text-center text-muted py-3">
                                    <i class="fas fa-building"></i>
                                    <p class="mb-0">No companies with Place IDs found.</p>
                                    <small>Add companies with valid Place IDs first.</small>
                                </div>
                            }
                        </div>

                        @if (companies.Any(c => string.IsNullOrEmpty(c.PlaceId)))
                        {
                            <div class="alert alert-warning mt-3">
                                <small>
                                    <strong>Note:</strong> @(companies.Count(c => string.IsNullOrEmpty(c.PlaceId))) companies don't have Place IDs and cannot be monitored.
                                    <a href="/Drive/SimplePlaceIdFinder" target="_blank">Add Place IDs</a>
                                </small>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body text-center">
                    <button type="submit" class="btn btn-success btn-lg">
                        <i class="fas fa-plus"></i> Create Scheduled Monitor
                    </button>
                    <a asp-action="Index" class="btn btn-outline-secondary btn-lg ms-3">
                        <i class="fas fa-times"></i> Cancel
                    </a>
                </div>
            </div>
        </div>
    </div>
</form>

<script>
    function updateScheduleOptions() {
        const scheduleType = document.querySelector('[name="ScheduleType"]').value;
        const dayOfWeekGroup = document.getElementById('dayOfWeekGroup');
        const dayOfMonthGroup = document.getElementById('dayOfMonthGroup');
        
        dayOfWeekGroup.style.display = scheduleType == '1' ? 'block' : 'none';
        dayOfMonthGroup.style.display = scheduleType == '2' ? 'block' : 'none';
        
        updateSchedulePreview();
    }

    function updateSchedulePreview() {
        const scheduleType = document.querySelector('[name="ScheduleType"]').value;
        const scheduleTime = document.querySelector('[name="ScheduleTime"]').value || '09:00';
        const dayOfWeek = document.querySelector('[name="DayOfWeek"]').value;
        const dayOfMonth = document.querySelector('[name="DayOfMonth"]').value;
        
        let text = '';
        const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
        
        switch (scheduleType) {
            case '0': // Daily
                text = `Daily at ${scheduleTime}`;
                break;
            case '1': // Weekly
                if (dayOfWeek) {
                    text = `Weekly on ${days[dayOfWeek]} at ${scheduleTime}`;
                } else {
                    text = `Weekly at ${scheduleTime} (select day)`;
                }
                break;
            case '2': // Monthly
                if (dayOfMonth) {
                    text = `Monthly on day ${dayOfMonth} at ${scheduleTime}`;
                } else {
                    text = `Monthly at ${scheduleTime} (select day)`;
                }
                break;
        }
        
        document.getElementById('scheduleText').textContent = text;
    }

    function toggleCompanySelection() {
        const includeAll = document.querySelector('[name="IncludeAllCompanies"]').checked;
        const companyGroup = document.getElementById('companySelectionGroup');
        companyGroup.style.display = includeAll ? 'none' : 'block';
    }

    function selectAllCompanies() {
        document.querySelectorAll('.company-checkbox').forEach(cb => cb.checked = true);
    }

    function clearAllCompanies() {
        document.querySelectorAll('.company-checkbox').forEach(cb => cb.checked = false);
    }

    async function testEmail() {
        const email = document.querySelector('[name="EmailAddress"]').value;
        if (!email) {
            alert('Please enter an email address first.');
            return;
        }

        try {
            const formData = new FormData();
            formData.append('email', email);
            formData.append('__RequestVerificationToken', document.querySelector('input[name="__RequestVerificationToken"]').value);

            const response = await fetch('/ScheduledMonitor/TestEmail', {
                method: 'POST',
                body: formData
            });

            const result = await response.json();
            
            if (result.success) {
                alert('✅ ' + result.message);
            } else {
                alert('❌ ' + result.message);
            }
        } catch (error) {
            alert('❌ Error sending test email: ' + error.message);
        }
    }

    // Initialize on page load
    document.addEventListener('DOMContentLoaded', function() {
        updateScheduleOptions();
        toggleCompanySelection();
        
        // Add event listeners
        document.querySelector('[name="ScheduleTime"]').addEventListener('change', updateSchedulePreview);
        document.querySelector('[name="DayOfWeek"]').addEventListener('change', updateSchedulePreview);
        document.querySelector('[name="DayOfMonth"]').addEventListener('change', updateSchedulePreview);
    });
</script>

@section Scripts {
    @Html.Partial("_ValidationScriptsPartial")
}